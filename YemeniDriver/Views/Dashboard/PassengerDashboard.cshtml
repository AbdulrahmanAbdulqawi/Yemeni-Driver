@using YemeniDriver.ViewModel.Dashboard
@model PassengerDashboardViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  @*   <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.10/signalr.min.js"></script> *@



    <title>@ViewData["Title"]</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 800px;
            margin: auto;
            padding: 20px;
            text-align: center;
        }

        .card {
            width: 100%;
            margin: 10px;
            text-align: center;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease-in-out;
        }

            .card img {
                width: 100%;
                height: 225px;
                object-fit:contain;
            }

        .card-body {
            padding: 15px;
        }

        .drivers-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            margin-top: 20px;
        }

        .driver-card {
            width: 300px;
            margin: 10px;
            text-align: center;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease-in-out;
        }

            .driver-card:hover {
                transform: scale(1.05);
            }

            .driver-card img {
                width: 100%;
                height: 200px;
                object-fit: cover;
                border-bottom: 1px solid #dee2e6;
            }

        .driver-card-body {
            padding: 15px;
        }

        .driver-card-title {
            font-size: 1.5em;
            margin-bottom: 10px;
        }

        .driver-card-text {
            margin-bottom: 10px;
            font-size: 1.2em;
        }

        #requestRideBtn {
            margin-top: 20px;
        }

        .ride-section {
            margin-top: 30px;
        }

            .ride-section h5 {
                font-size: 1.5em;
                margin-bottom: 10px;
            }

            .ride-section p {
                font-size: 1.2em;
                margin-bottom: 20px;
            }

        .btn .btn-primary{
            margin-top:10px;
        }

        #requestProgress {
            display: none;
            margin-top: 20px;
        }

        #cancelRequestBtn {
            display: none;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <div class="card">
            <img src="@Model.Image" alt="Driver Image">
            <div class="card-body">
                <p class="card-text">@Model.FirstName</p>
                <p class="card-text">@Model.Location</p>

                <div class="card-buttons">
                    <a asp-controller="Account" asp-action="EditPassengerDetails" asp-route-passengerId="@Model.Id" class="btn btn-primary">Edit</a>
                    <a asp-controller="Account" asp-action="ViewPassengerDetails" asp-route-passengerId="@Model.Id" class="btn btn-primary">View</a>
                </div>
            </div>
            <div class="card-body">

                <div class="container mt-5">
                    <h2 class="text-center mb-4">Available Drivers</h2>
                    <div class="drivers-container">
                        @foreach (var driver in Model.AvailableDrivers)
                        {
                            <div class="driver-card">
                                <div class="driver-card-body">
                                    <h5 class="driver-card-title">@driver.FirstName @driver.LastName</h5>
                                    <p class="driver-card-text">Gender: @driver.Gender</p>
                                    <p class="driver-card-text">Address: @driver.Location</p>
                                    <img class="card-img-top" src="@driver.ProfileImageUrl" alt="Card image cap">
                                    <a asp-controller="Account" asp-action="ViewDriverDetails" asp-route-driverId="@driver.Id" class="btn btn-primary">View</a>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <div class="ride-section">
                    <div class="ride-section">
                        <h5>Ready for your next ride?</h5>
                        <p>Simply click the button below to request a ride.</p>

                        <form method="post">


                            <div class="form-group">
                                <label for="selectedDriver">Select a Driver:</label>
                                <select id="selectedDriver" class="form-control">
                                    <option value="">Select a driver</option>
                                    @foreach (var driver in Model.AvailableDrivers)
                                    {
                                        <option value="@driver.Id">@driver.FirstName @driver.LastName</option>
                                    }
                                </select>
                            </div>
                            <br />
                            <div class="form-group">
                                <label for="dropoffLocation">Dropoff Location:</label>
                                <input type="text" id="dropoffLocation" />
                            </div>

                            <!-- Add other fields if needed -->

                            <button type="submit" id="requestRideBtn" class="btn btn-primary">Submit Request</button>
                        </form>
                        @if (TempData["Error"] != null)
                        {
                            <div class="alert alert-danger">
                                <strong>Sorry!</strong> - @TempData["Error"]
                            </div>
                        }

                        <div id="requestProgress" class="progress">
                            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 100%"></div>
                        </div>
                        <button id="cancelRequestBtn" class="btn btn-danger">Cancel Request</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    <script src="~/js/Request.js"></script>

   <script src="~/js/updateLiveLocation.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.6.1/toastify.min.css" integrity="sha512-UiKdzM5DL+I+2YFxK+7TDedVyVm7HMp/bN85NeWMJNYortoll+Nd6PU9ZDrZiaOsdarOyk9egQm6LOJZi36L2g==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.6.1/toastify.min.js" integrity="sha512-79j1YQOJuI8mLseq9icSQKT6bLlLtWknKwj1OpJZMdPt2pFBry3vQTt+NZuJw7NSd1pHhZlu0s12Ngqfa371EA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>
    <script>

        // function refreshPage() {
        //     // Reload the current page
        //     location.reload();
        // }
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/notificationHub")
            .build();

        connection.start().then(() => {
            console.log("Connection established.");
        }).catch(err => {
            console.error(err.toString());
        });

        connection.on("ReceiveRequestNotification", (message) => {
            // Handle the incoming request notification
            console.log("Received request notification:", message);

            //Update the UI or take any other actions
            Toastify({
                text: message,
                duration: 5000,  // Duration in milliseconds
                close: true,
                gravity: "bottom",  // Toast position
            }).showToast();

        });
    </script>


</body>
</html>
